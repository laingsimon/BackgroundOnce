name: .NET

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]



jobs:
  build:
    runs-on: ubuntu-latest

    env:
      MAJOR_VERSION: 4
      MINOR_VERSION: 0
      PRE_RELEASE_TAG: ${{ format('-{0}', github.ref_name) }}

    steps:
    - uses: actions/checkout@v2

    - name: Reset pre-release tag for main branch
      if: ${{ github.ref_name == 'main' }}
      run: echo "PRE_RELEASE_TAG=" >> $GITHUB_ENV

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore --configuration Release "-p:Version=$MAJOR_VERSION.$MINOR_VERSION.$GITHUB_RUN_NUMBER$PRE_RELEASE_TAG"
    - name: Test
      run: dotnet test --no-build --verbosity normal --configuration Release
    - name: Copy packages
      run: mkdir Packages; cp BackgroundOnce/bin/Release/*.nupkg Packages; cp BackgroundOnce.EFCore/bin/Release/*.nupkg Packages;
    - name: Upload Nuget packages
      uses: actions/upload-artifact@v2
      with:
        name: "Nuget packages (${{env.MAJOR_VERSION}}.${{env.MINOR_VERSION}}.${{github.run_number}}${{env.PRE_RELEASE_TAG}})"
        path: Packages/*.nupkg
        retention-days: 5
    - name: Push with dotnet
      if: ${{ github.ref_name == 'main' }}
      run: dotnet nuget push Packages/*.nupkg --api-key ${{ secrets.NUGETAPIKEY }} --source https://api.nuget.org/v3/index.json
